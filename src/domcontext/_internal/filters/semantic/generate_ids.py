"""Generate readable IDs for semantic elements.

This pass assigns LLM-friendly IDs like "button-1", "input-2" to each SemanticElement.
IDs are generated by counting elements per tag type.
Also builds ID→Element mapping in a single traversal for efficiency.
"""

from typing import Dict, Tuple

from ...ir.semantic_ir import SemanticElement, SemanticTreeNode


def generate_ids_pass(
    root: SemanticTreeNode,
) -> Tuple[SemanticTreeNode, Dict[str, SemanticElement]]:
    """
    Generate readable IDs for all SemanticElements and build ID mapping.

    Assigns IDs like "button-1", "button-2", "input-1", "div-1", etc.
    IDs are unique within the tree and generated by counting elements per tag.

    Does two things in a single tree traversal:
    1. Assigns readable_id to each SemanticElement
    2. Builds mapping from readable_id → SemanticElement

    Args:
        root: Root SemanticTreeNode to process

    Returns:
        Tuple of (root, id_mapping):
            - root: Same root node (modified in place) with IDs assigned
            - id_mapping: Dict mapping readable_id → SemanticElement
    """
    # Counter for each tag type
    tag_counters: Dict[str, int] = {}

    # ID mapping built during traversal
    id_mapping: Dict[str, SemanticElement] = {}

    def assign_ids_recursive(node: SemanticTreeNode) -> None:
        """Recursively assign IDs and build mapping."""
        # Only process element nodes
        if isinstance(node.data, SemanticElement):
            element = node.data
            tag = element.tag

            # Increment counter for this tag
            if tag not in tag_counters:
                tag_counters[tag] = 0
            tag_counters[tag] += 1

            # Assign readable ID
            readable_id = f"{tag}-{tag_counters[tag]}"
            element.readable_id = readable_id

            # Add to mapping
            id_mapping[readable_id] = element

        # Process children
        for child in node.children:
            assign_ids_recursive(child)

    # Start from root
    assign_ids_recursive(root)

    return root, id_mapping
